1. Every thread should have a MutatorContext:
Output via Log in MMTk requires getting a current context (binded with thread)

2. Plan instance should be created after class initialization:
Plan constructor will call Map.finalizeStaticSpaceMap(), and set sharedFLMap. sharedFLMap is created during class initialization. 

3. Runtime needs to be able to control MMTk's GC point:
MMTk's slow allocation loop won't end until the allocation is successful. So runtime needs to be able to insert GC point into this allocation loop, otherwise the loop will keep running and request GC when MMTk is already doing GC. This will cause at least two subsequent GC being triggered whenever a GC is needed. 
